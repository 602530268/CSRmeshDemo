//
//  StyleKitName.m
//  
//
//  Created by  on 26/01/2016.
//  Copyright (c) 2016 . All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "StyleKitName.h"


@implementation StyleKitName

#pragma mark Cache

static UIImage* _imageOfWatch_light_on = nil;
static UIImage* _imageOfWatch_lock_close = nil;
static UIImage* _imageOfWatch_light_off = nil;
static UIImage* _imageOfWatch_temp_minus = nil;
static UIImage* _imageOfWatch_temp_plus = nil;
static UIImage* _imageOfWatch_lock_close_disabled = nil;
static UIImage* _imageOfWatch_lock_open_disabled = nil;
static UIImage* _imageOfWatch_lock_open = nil;
static UIImage* _imageOfWatch_table_light = nil;
static UIImage* _imageOfWatch_table_lock = nil;
static UIImage* _imageOfWatch_table_heater = nil;
static UIImage* _imageOfWatch_table_group = nil;
static UIImage* _imageOfWatch_table_sensor = nil;
static UIImage* _imageOfWatch_connection_lost = nil;

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawWatch_light_on
{
    //// Color Declarations
    UIColor* fec12f = [UIColor colorWithRed: 0.996 green: 0.757 blue: 0.184 alpha: 1];
    UIColor* fillColor2 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(4, 4, 60, 60)];
    [fec12f setFill];
    [ovalPath fill];


    //// Bezier Drawing
    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(41.7, 43.26)];
    [bezierPath addLineToPoint: CGPointMake(44.28, 45.88)];
    [bezierPath addLineToPoint: CGPointMake(46.31, 43.83)];
    [bezierPath addLineToPoint: CGPointMake(43.72, 41.22)];
    [bezierPath addLineToPoint: CGPointMake(41.7, 43.26)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(45.68, 35.02)];
    [bezierPath addLineToPoint: CGPointMake(50, 35.02)];
    [bezierPath addLineToPoint: CGPointMake(50, 32.1)];
    [bezierPath addLineToPoint: CGPointMake(45.68, 32.1)];
    [bezierPath addLineToPoint: CGPointMake(45.68, 35.02)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(38.47, 26)];
    [bezierPath addLineToPoint: CGPointMake(38.47, 19)];
    [bezierPath addLineToPoint: CGPointMake(29.82, 19)];
    [bezierPath addLineToPoint: CGPointMake(29.82, 26)];
    [bezierPath addCurveToPoint: CGPointMake(25.5, 33.56) controlPoint1: CGPointMake(27.24, 27.52) controlPoint2: CGPointMake(25.5, 30.33)];
    [bezierPath addCurveToPoint: CGPointMake(34.15, 42.3) controlPoint1: CGPointMake(25.5, 38.38) controlPoint2: CGPointMake(29.37, 42.3)];
    [bezierPath addCurveToPoint: CGPointMake(42.79, 33.56) controlPoint1: CGPointMake(38.92, 42.3) controlPoint2: CGPointMake(42.79, 38.38)];
    [bezierPath addCurveToPoint: CGPointMake(38.47, 26) controlPoint1: CGPointMake(42.79, 30.33) controlPoint2: CGPointMake(41.05, 27.52)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(22.62, 32.1)];
    [bezierPath addLineToPoint: CGPointMake(18.29, 32.1)];
    [bezierPath addLineToPoint: CGPointMake(18.29, 35.02)];
    [bezierPath addLineToPoint: CGPointMake(22.62, 35.02)];
    [bezierPath addLineToPoint: CGPointMake(22.62, 32.1)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(32.7, 49.5)];
    [bezierPath addLineToPoint: CGPointMake(35.59, 49.5)];
    [bezierPath addLineToPoint: CGPointMake(35.59, 45.21)];
    [bezierPath addLineToPoint: CGPointMake(32.7, 45.21)];
    [bezierPath addLineToPoint: CGPointMake(32.7, 49.5)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(21.97, 43.81)];
    [bezierPath addLineToPoint: CGPointMake(24, 45.86)];
    [bezierPath addLineToPoint: CGPointMake(26.58, 43.24)];
    [bezierPath addLineToPoint: CGPointMake(24.55, 41.19)];
    [bezierPath addLineToPoint: CGPointMake(21.97, 43.81)];
    [bezierPath closePath];
    [fillColor2 setFill];
    [bezierPath fill];
}

+ (void)drawWatch_lock_close
{
    //// Color Declarations
    UIColor* color8 = [UIColor colorWithRed: 0.173 green: 0.6 blue: 0.945 alpha: 1];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(4, 4, 60, 60)];
    [color8 setFill];
    [ovalPath fill];


    //// Bezier Drawing
    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(38.3, 28.33)];
    [bezierPath addLineToPoint: CGPointMake(29.2, 28.33)];
    [bezierPath addLineToPoint: CGPointMake(29.2, 25.38)];
    [bezierPath addCurveToPoint: CGPointMake(33.75, 20.8) controlPoint1: CGPointMake(29.2, 22.86) controlPoint2: CGPointMake(31.24, 20.8)];
    [bezierPath addCurveToPoint: CGPointMake(38.3, 25.38) controlPoint1: CGPointMake(36.26, 20.8) controlPoint2: CGPointMake(38.3, 22.86)];
    [bezierPath addLineToPoint: CGPointMake(38.3, 28.33)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(33.75, 41.62)];
    [bezierPath addCurveToPoint: CGPointMake(30.81, 38.67) controlPoint1: CGPointMake(32.13, 41.62) controlPoint2: CGPointMake(30.81, 40.29)];
    [bezierPath addCurveToPoint: CGPointMake(33.75, 35.71) controlPoint1: CGPointMake(30.81, 37.04) controlPoint2: CGPointMake(32.13, 35.71)];
    [bezierPath addCurveToPoint: CGPointMake(36.69, 38.67) controlPoint1: CGPointMake(35.37, 35.71) controlPoint2: CGPointMake(36.69, 37.04)];
    [bezierPath addCurveToPoint: CGPointMake(33.75, 41.62) controlPoint1: CGPointMake(36.69, 40.29) controlPoint2: CGPointMake(35.37, 41.62)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(42.56, 28.33)];
    [bezierPath addLineToPoint: CGPointMake(41.09, 28.33)];
    [bezierPath addLineToPoint: CGPointMake(41.09, 25.38)];
    [bezierPath addCurveToPoint: CGPointMake(33.75, 18) controlPoint1: CGPointMake(41.09, 21.31) controlPoint2: CGPointMake(37.8, 18)];
    [bezierPath addCurveToPoint: CGPointMake(26.41, 25.38) controlPoint1: CGPointMake(29.7, 18) controlPoint2: CGPointMake(26.41, 21.31)];
    [bezierPath addLineToPoint: CGPointMake(26.41, 28.33)];
    [bezierPath addLineToPoint: CGPointMake(24.94, 28.33)];
    [bezierPath addCurveToPoint: CGPointMake(22, 31.29) controlPoint1: CGPointMake(23.32, 28.33) controlPoint2: CGPointMake(22, 29.66)];
    [bezierPath addLineToPoint: CGPointMake(22, 46.05)];
    [bezierPath addCurveToPoint: CGPointMake(24.94, 49) controlPoint1: CGPointMake(22, 47.67) controlPoint2: CGPointMake(23.32, 49)];
    [bezierPath addLineToPoint: CGPointMake(42.56, 49)];
    [bezierPath addCurveToPoint: CGPointMake(45.5, 46.05) controlPoint1: CGPointMake(44.18, 49) controlPoint2: CGPointMake(45.5, 47.67)];
    [bezierPath addLineToPoint: CGPointMake(45.5, 31.29)];
    [bezierPath addCurveToPoint: CGPointMake(42.56, 28.33) controlPoint1: CGPointMake(45.5, 29.66) controlPoint2: CGPointMake(44.18, 28.33)];
    [bezierPath closePath];
    [UIColor.whiteColor setFill];
    [bezierPath fill];
}

+ (void)drawWatch_light_off
{
    //// Color Declarations
    UIColor* color13 = [UIColor colorWithRed: 0.996 green: 0.757 blue: 0.184 alpha: 1];
    UIColor* fillColor2 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(4, 4, 60, 60)];
    [color13 setFill];
    [ovalPath fill];


    //// Bezier 3 Drawing
    UIBezierPath* bezier3Path = [UIBezierPath bezierPath];
    [bezier3Path moveToPoint: CGPointMake(38.47, 26)];
    [bezier3Path addLineToPoint: CGPointMake(38.47, 19)];
    [bezier3Path addLineToPoint: CGPointMake(29.82, 19)];
    [bezier3Path addLineToPoint: CGPointMake(29.82, 26)];
    [bezier3Path addCurveToPoint: CGPointMake(25.5, 33.56) controlPoint1: CGPointMake(27.24, 27.52) controlPoint2: CGPointMake(25.5, 30.33)];
    [bezier3Path addCurveToPoint: CGPointMake(34.15, 42.3) controlPoint1: CGPointMake(25.5, 38.38) controlPoint2: CGPointMake(29.37, 42.3)];
    [bezier3Path addCurveToPoint: CGPointMake(42.79, 33.56) controlPoint1: CGPointMake(38.92, 42.3) controlPoint2: CGPointMake(42.79, 38.38)];
    [bezier3Path addCurveToPoint: CGPointMake(38.47, 26) controlPoint1: CGPointMake(42.79, 30.33) controlPoint2: CGPointMake(41.05, 27.52)];
    [bezier3Path closePath];
    [fillColor2 setFill];
    [bezier3Path fill];
}

+ (void)drawWatch_temp_minus
{
    //// Color Declarations
    UIColor* color12 = [UIColor colorWithRed: 0.98 green: 0.09 blue: 0.157 alpha: 1];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(4, 4, 60, 60)];
    [color12 setFill];
    [ovalPath fill];


    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(23, 32, 23, 3)];
    [UIColor.whiteColor setFill];
    [rectanglePath fill];
}

+ (void)drawWatch_temp_plus
{
    //// Color Declarations
    UIColor* color12 = [UIColor colorWithRed: 0.98 green: 0.09 blue: 0.157 alpha: 1];
    UIColor* fillColor2 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(4, 4, 60, 60)];
    [color12 setFill];
    [ovalPath fill];


    //// Bezier Drawing
    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(32.86, 22)];
    [bezierPath addLineToPoint: CGPointMake(32.86, 31.86)];
    [bezierPath addLineToPoint: CGPointMake(23, 31.86)];
    [bezierPath addLineToPoint: CGPointMake(23, 35.14)];
    [bezierPath addLineToPoint: CGPointMake(32.86, 35.14)];
    [bezierPath addLineToPoint: CGPointMake(32.86, 45)];
    [bezierPath addLineToPoint: CGPointMake(36.14, 45)];
    [bezierPath addLineToPoint: CGPointMake(36.14, 35.14)];
    [bezierPath addLineToPoint: CGPointMake(46, 35.14)];
    [bezierPath addLineToPoint: CGPointMake(46, 31.86)];
    [bezierPath addLineToPoint: CGPointMake(36.14, 31.86)];
    [bezierPath addLineToPoint: CGPointMake(36.14, 22)];
    [bezierPath addLineToPoint: CGPointMake(32.86, 22)];
    [bezierPath closePath];
    [fillColor2 setFill];
    [bezierPath fill];
}

+ (void)drawWatch_lock_close_disabled
{
    //// Color Declarations
    UIColor* color9 = [UIColor colorWithRed: 0.8 green: 0.8 blue: 0.804 alpha: 1];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(4, 4, 60, 60)];
    [color9 setFill];
    [ovalPath fill];


    //// Bezier Drawing
    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(38.3, 28.33)];
    [bezierPath addLineToPoint: CGPointMake(29.2, 28.33)];
    [bezierPath addLineToPoint: CGPointMake(29.2, 25.38)];
    [bezierPath addCurveToPoint: CGPointMake(33.75, 20.8) controlPoint1: CGPointMake(29.2, 22.86) controlPoint2: CGPointMake(31.24, 20.8)];
    [bezierPath addCurveToPoint: CGPointMake(38.3, 25.38) controlPoint1: CGPointMake(36.26, 20.8) controlPoint2: CGPointMake(38.3, 22.86)];
    [bezierPath addLineToPoint: CGPointMake(38.3, 28.33)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(33.75, 41.62)];
    [bezierPath addCurveToPoint: CGPointMake(30.81, 38.67) controlPoint1: CGPointMake(32.13, 41.62) controlPoint2: CGPointMake(30.81, 40.29)];
    [bezierPath addCurveToPoint: CGPointMake(33.75, 35.71) controlPoint1: CGPointMake(30.81, 37.04) controlPoint2: CGPointMake(32.13, 35.71)];
    [bezierPath addCurveToPoint: CGPointMake(36.69, 38.67) controlPoint1: CGPointMake(35.37, 35.71) controlPoint2: CGPointMake(36.69, 37.04)];
    [bezierPath addCurveToPoint: CGPointMake(33.75, 41.62) controlPoint1: CGPointMake(36.69, 40.29) controlPoint2: CGPointMake(35.37, 41.62)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(42.56, 28.33)];
    [bezierPath addLineToPoint: CGPointMake(41.09, 28.33)];
    [bezierPath addLineToPoint: CGPointMake(41.09, 25.38)];
    [bezierPath addCurveToPoint: CGPointMake(33.75, 18) controlPoint1: CGPointMake(41.09, 21.31) controlPoint2: CGPointMake(37.8, 18)];
    [bezierPath addCurveToPoint: CGPointMake(26.41, 25.38) controlPoint1: CGPointMake(29.7, 18) controlPoint2: CGPointMake(26.41, 21.31)];
    [bezierPath addLineToPoint: CGPointMake(26.41, 28.33)];
    [bezierPath addLineToPoint: CGPointMake(24.94, 28.33)];
    [bezierPath addCurveToPoint: CGPointMake(22, 31.29) controlPoint1: CGPointMake(23.32, 28.33) controlPoint2: CGPointMake(22, 29.66)];
    [bezierPath addLineToPoint: CGPointMake(22, 46.05)];
    [bezierPath addCurveToPoint: CGPointMake(24.94, 49) controlPoint1: CGPointMake(22, 47.67) controlPoint2: CGPointMake(23.32, 49)];
    [bezierPath addLineToPoint: CGPointMake(42.56, 49)];
    [bezierPath addCurveToPoint: CGPointMake(45.5, 46.05) controlPoint1: CGPointMake(44.18, 49) controlPoint2: CGPointMake(45.5, 47.67)];
    [bezierPath addLineToPoint: CGPointMake(45.5, 31.29)];
    [bezierPath addCurveToPoint: CGPointMake(42.56, 28.33) controlPoint1: CGPointMake(45.5, 29.66) controlPoint2: CGPointMake(44.18, 28.33)];
    [bezierPath closePath];
    [UIColor.whiteColor setFill];
    [bezierPath fill];
}

+ (void)drawWatch_lock_open_disabled
{
    //// Color Declarations
    UIColor* color9 = [UIColor colorWithRed: 0.8 green: 0.8 blue: 0.804 alpha: 1];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(4, 4, 60, 60)];
    [color9 setFill];
    [ovalPath fill];


    //// Bezier Drawing
    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(42.56, 46.05)];
    [bezierPath addLineToPoint: CGPointMake(24.94, 46.05)];
    [bezierPath addLineToPoint: CGPointMake(24.94, 31.29)];
    [bezierPath addLineToPoint: CGPointMake(42.56, 31.29)];
    [bezierPath addLineToPoint: CGPointMake(42.56, 46.05)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(42.56, 28.33)];
    [bezierPath addLineToPoint: CGPointMake(41.09, 28.33)];
    [bezierPath addLineToPoint: CGPointMake(41.09, 25.38)];
    [bezierPath addCurveToPoint: CGPointMake(33.75, 18) controlPoint1: CGPointMake(41.09, 21.31) controlPoint2: CGPointMake(37.8, 18)];
    [bezierPath addCurveToPoint: CGPointMake(26.41, 25.38) controlPoint1: CGPointMake(29.7, 18) controlPoint2: CGPointMake(26.41, 21.31)];
    [bezierPath addLineToPoint: CGPointMake(29.2, 25.38)];
    [bezierPath addCurveToPoint: CGPointMake(33.75, 20.8) controlPoint1: CGPointMake(29.2, 22.86) controlPoint2: CGPointMake(31.24, 20.8)];
    [bezierPath addCurveToPoint: CGPointMake(38.3, 25.38) controlPoint1: CGPointMake(36.26, 20.8) controlPoint2: CGPointMake(38.3, 22.86)];
    [bezierPath addLineToPoint: CGPointMake(38.3, 28.33)];
    [bezierPath addLineToPoint: CGPointMake(24.94, 28.33)];
    [bezierPath addCurveToPoint: CGPointMake(22, 31.29) controlPoint1: CGPointMake(23.32, 28.33) controlPoint2: CGPointMake(22, 29.66)];
    [bezierPath addLineToPoint: CGPointMake(22, 46.05)];
    [bezierPath addCurveToPoint: CGPointMake(24.94, 49) controlPoint1: CGPointMake(22, 47.67) controlPoint2: CGPointMake(23.32, 49)];
    [bezierPath addLineToPoint: CGPointMake(42.56, 49)];
    [bezierPath addCurveToPoint: CGPointMake(45.5, 46.05) controlPoint1: CGPointMake(44.18, 49) controlPoint2: CGPointMake(45.5, 47.67)];
    [bezierPath addLineToPoint: CGPointMake(45.5, 31.29)];
    [bezierPath addCurveToPoint: CGPointMake(42.56, 28.33) controlPoint1: CGPointMake(45.5, 29.66) controlPoint2: CGPointMake(44.18, 28.33)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(33.75, 41.62)];
    [bezierPath addCurveToPoint: CGPointMake(36.69, 38.67) controlPoint1: CGPointMake(35.37, 41.62) controlPoint2: CGPointMake(36.69, 40.29)];
    [bezierPath addCurveToPoint: CGPointMake(33.75, 35.71) controlPoint1: CGPointMake(36.69, 37.04) controlPoint2: CGPointMake(35.37, 35.71)];
    [bezierPath addCurveToPoint: CGPointMake(30.81, 38.67) controlPoint1: CGPointMake(32.13, 35.71) controlPoint2: CGPointMake(30.81, 37.04)];
    [bezierPath addCurveToPoint: CGPointMake(33.75, 41.62) controlPoint1: CGPointMake(30.81, 40.29) controlPoint2: CGPointMake(32.13, 41.62)];
    [bezierPath closePath];
    [UIColor.whiteColor setFill];
    [bezierPath fill];
}

+ (void)drawWatch_lock_open
{
    //// Color Declarations
    UIColor* color8 = [UIColor colorWithRed: 0.173 green: 0.6 blue: 0.945 alpha: 1];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(4, 4, 60, 60)];
    [color8 setFill];
    [ovalPath fill];


    //// Bezier Drawing
    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(42.56, 46.05)];
    [bezierPath addLineToPoint: CGPointMake(24.94, 46.05)];
    [bezierPath addLineToPoint: CGPointMake(24.94, 31.29)];
    [bezierPath addLineToPoint: CGPointMake(42.56, 31.29)];
    [bezierPath addLineToPoint: CGPointMake(42.56, 46.05)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(42.56, 28.33)];
    [bezierPath addLineToPoint: CGPointMake(41.09, 28.33)];
    [bezierPath addLineToPoint: CGPointMake(41.09, 25.38)];
    [bezierPath addCurveToPoint: CGPointMake(33.75, 18) controlPoint1: CGPointMake(41.09, 21.31) controlPoint2: CGPointMake(37.8, 18)];
    [bezierPath addCurveToPoint: CGPointMake(26.41, 25.38) controlPoint1: CGPointMake(29.7, 18) controlPoint2: CGPointMake(26.41, 21.31)];
    [bezierPath addLineToPoint: CGPointMake(29.2, 25.38)];
    [bezierPath addCurveToPoint: CGPointMake(33.75, 20.8) controlPoint1: CGPointMake(29.2, 22.86) controlPoint2: CGPointMake(31.24, 20.8)];
    [bezierPath addCurveToPoint: CGPointMake(38.3, 25.38) controlPoint1: CGPointMake(36.26, 20.8) controlPoint2: CGPointMake(38.3, 22.86)];
    [bezierPath addLineToPoint: CGPointMake(38.3, 28.33)];
    [bezierPath addLineToPoint: CGPointMake(24.94, 28.33)];
    [bezierPath addCurveToPoint: CGPointMake(22, 31.29) controlPoint1: CGPointMake(23.32, 28.33) controlPoint2: CGPointMake(22, 29.66)];
    [bezierPath addLineToPoint: CGPointMake(22, 46.05)];
    [bezierPath addCurveToPoint: CGPointMake(24.94, 49) controlPoint1: CGPointMake(22, 47.67) controlPoint2: CGPointMake(23.32, 49)];
    [bezierPath addLineToPoint: CGPointMake(42.56, 49)];
    [bezierPath addCurveToPoint: CGPointMake(45.5, 46.05) controlPoint1: CGPointMake(44.18, 49) controlPoint2: CGPointMake(45.5, 47.67)];
    [bezierPath addLineToPoint: CGPointMake(45.5, 31.29)];
    [bezierPath addCurveToPoint: CGPointMake(42.56, 28.33) controlPoint1: CGPointMake(45.5, 29.66) controlPoint2: CGPointMake(44.18, 28.33)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(33.75, 41.62)];
    [bezierPath addCurveToPoint: CGPointMake(36.69, 38.67) controlPoint1: CGPointMake(35.37, 41.62) controlPoint2: CGPointMake(36.69, 40.29)];
    [bezierPath addCurveToPoint: CGPointMake(33.75, 35.71) controlPoint1: CGPointMake(36.69, 37.04) controlPoint2: CGPointMake(35.37, 35.71)];
    [bezierPath addCurveToPoint: CGPointMake(30.81, 38.67) controlPoint1: CGPointMake(32.13, 35.71) controlPoint2: CGPointMake(30.81, 37.04)];
    [bezierPath addCurveToPoint: CGPointMake(33.75, 41.62) controlPoint1: CGPointMake(30.81, 40.29) controlPoint2: CGPointMake(32.13, 41.62)];
    [bezierPath closePath];
    [UIColor.whiteColor setFill];
    [bezierPath fill];
}

+ (void)drawWatch_table_light
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* fillColor3 = [UIColor colorWithRed: 0.961 green: 0.729 blue: 0.283 alpha: 1];

    //// Bezier Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, -2.5, -10.5);

    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(13.36, 22.04)];
    [bezierPath addLineToPoint: CGPointMake(14.33, 23.07)];
    [bezierPath addLineToPoint: CGPointMake(15.1, 22.27)];
    [bezierPath addLineToPoint: CGPointMake(14.12, 21.24)];
    [bezierPath addLineToPoint: CGPointMake(13.36, 22.04)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(14.86, 18.8)];
    [bezierPath addLineToPoint: CGPointMake(16.5, 18.8)];
    [bezierPath addLineToPoint: CGPointMake(16.5, 17.66)];
    [bezierPath addLineToPoint: CGPointMake(14.86, 17.66)];
    [bezierPath addLineToPoint: CGPointMake(14.86, 18.8)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(12.14, 15.26)];
    [bezierPath addLineToPoint: CGPointMake(12.14, 12.5)];
    [bezierPath addLineToPoint: CGPointMake(8.86, 12.5)];
    [bezierPath addLineToPoint: CGPointMake(8.86, 15.26)];
    [bezierPath addCurveToPoint: CGPointMake(7.23, 18.23) controlPoint1: CGPointMake(7.89, 15.85) controlPoint2: CGPointMake(7.23, 16.96)];
    [bezierPath addCurveToPoint: CGPointMake(10.5, 21.66) controlPoint1: CGPointMake(7.23, 20.12) controlPoint2: CGPointMake(8.69, 21.66)];
    [bezierPath addCurveToPoint: CGPointMake(13.77, 18.23) controlPoint1: CGPointMake(12.31, 21.66) controlPoint2: CGPointMake(13.77, 20.12)];
    [bezierPath addCurveToPoint: CGPointMake(12.14, 15.26) controlPoint1: CGPointMake(13.77, 16.96) controlPoint2: CGPointMake(13.11, 15.85)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(6.14, 17.66)];
    [bezierPath addLineToPoint: CGPointMake(4.5, 17.66)];
    [bezierPath addLineToPoint: CGPointMake(4.5, 18.8)];
    [bezierPath addLineToPoint: CGPointMake(6.14, 18.8)];
    [bezierPath addLineToPoint: CGPointMake(6.14, 17.66)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(9.95, 24.5)];
    [bezierPath addLineToPoint: CGPointMake(11.05, 24.5)];
    [bezierPath addLineToPoint: CGPointMake(11.05, 22.81)];
    [bezierPath addLineToPoint: CGPointMake(9.95, 22.81)];
    [bezierPath addLineToPoint: CGPointMake(9.95, 24.5)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(5.89, 22.26)];
    [bezierPath addLineToPoint: CGPointMake(6.66, 23.07)];
    [bezierPath addLineToPoint: CGPointMake(7.64, 22.04)];
    [bezierPath addLineToPoint: CGPointMake(6.87, 21.23)];
    [bezierPath addLineToPoint: CGPointMake(5.89, 22.26)];
    [bezierPath closePath];
    [fillColor3 setFill];
    [bezierPath fill];

    CGContextRestoreGState(context);
}

+ (void)drawWatch_table_lock
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* fillColor6 = [UIColor colorWithRed: 0.173 green: 0.6 blue: 0.945 alpha: 1];

    //// Bezier Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 22.5, -11.5);

    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(-12.56, 17.5)];
    [bezierPath addLineToPoint: CGPointMake(-16.44, 17.5)];
    [bezierPath addLineToPoint: CGPointMake(-16.44, 16.36)];
    [bezierPath addCurveToPoint: CGPointMake(-14.5, 14.59) controlPoint1: CGPointMake(-16.44, 15.38) controlPoint2: CGPointMake(-15.57, 14.59)];
    [bezierPath addCurveToPoint: CGPointMake(-12.56, 16.36) controlPoint1: CGPointMake(-13.43, 14.59) controlPoint2: CGPointMake(-12.56, 15.38)];
    [bezierPath addLineToPoint: CGPointMake(-12.56, 17.5)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(-14.5, 22.64)];
    [bezierPath addCurveToPoint: CGPointMake(-15.75, 21.5) controlPoint1: CGPointMake(-15.19, 22.64) controlPoint2: CGPointMake(-15.75, 22.13)];
    [bezierPath addCurveToPoint: CGPointMake(-14.5, 20.36) controlPoint1: CGPointMake(-15.75, 20.87) controlPoint2: CGPointMake(-15.19, 20.36)];
    [bezierPath addCurveToPoint: CGPointMake(-13.25, 21.5) controlPoint1: CGPointMake(-13.81, 20.36) controlPoint2: CGPointMake(-13.25, 20.87)];
    [bezierPath addCurveToPoint: CGPointMake(-14.5, 22.64) controlPoint1: CGPointMake(-13.25, 22.13) controlPoint2: CGPointMake(-13.81, 22.64)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(-10.75, 17.5)];
    [bezierPath addLineToPoint: CGPointMake(-11.38, 17.5)];
    [bezierPath addLineToPoint: CGPointMake(-11.38, 16.36)];
    [bezierPath addCurveToPoint: CGPointMake(-14.5, 13.5) controlPoint1: CGPointMake(-11.38, 14.78) controlPoint2: CGPointMake(-12.78, 13.5)];
    [bezierPath addCurveToPoint: CGPointMake(-17.63, 16.36) controlPoint1: CGPointMake(-16.23, 13.5) controlPoint2: CGPointMake(-17.63, 14.78)];
    [bezierPath addLineToPoint: CGPointMake(-17.63, 17.5)];
    [bezierPath addLineToPoint: CGPointMake(-18.25, 17.5)];
    [bezierPath addCurveToPoint: CGPointMake(-19.5, 18.64) controlPoint1: CGPointMake(-18.94, 17.5) controlPoint2: CGPointMake(-19.5, 18.01)];
    [bezierPath addLineToPoint: CGPointMake(-19.5, 24.36)];
    [bezierPath addCurveToPoint: CGPointMake(-18.25, 25.5) controlPoint1: CGPointMake(-19.5, 24.99) controlPoint2: CGPointMake(-18.94, 25.5)];
    [bezierPath addLineToPoint: CGPointMake(-10.75, 25.5)];
    [bezierPath addCurveToPoint: CGPointMake(-9.5, 24.36) controlPoint1: CGPointMake(-10.06, 25.5) controlPoint2: CGPointMake(-9.5, 24.99)];
    [bezierPath addLineToPoint: CGPointMake(-9.5, 18.64)];
    [bezierPath addCurveToPoint: CGPointMake(-10.75, 17.5) controlPoint1: CGPointMake(-9.5, 18.01) controlPoint2: CGPointMake(-10.06, 17.5)];
    [bezierPath closePath];
    [fillColor6 setFill];
    [bezierPath fill];

    CGContextRestoreGState(context);
}

+ (void)drawWatch_table_heater
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* fillColor7 = [UIColor colorWithRed: 0.78 green: 0.046 blue: 0.127 alpha: 1];

    //// Bezier Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 22.5, -11.5);

    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(-14.56, 22.97)];
    [bezierPath addCurveToPoint: CGPointMake(-16.14, 21.44) controlPoint1: CGPointMake(-15.43, 22.97) controlPoint2: CGPointMake(-16.14, 22.29)];
    [bezierPath addCurveToPoint: CGPointMake(-14.76, 19.91) controlPoint1: CGPointMake(-16.14, 20.64) controlPoint2: CGPointMake(-15.62, 20.08)];
    [bezierPath addCurveToPoint: CGPointMake(-12.5, 18.65) controlPoint1: CGPointMake(-13.89, 19.73) controlPoint2: CGPointMake(-13, 19.32)];
    [bezierPath addCurveToPoint: CGPointMake(-12.21, 20.62) controlPoint1: CGPointMake(-12.31, 19.28) controlPoint2: CGPointMake(-12.21, 19.94)];
    [bezierPath addCurveToPoint: CGPointMake(-14.56, 22.97) controlPoint1: CGPointMake(-12.21, 21.92) controlPoint2: CGPointMake(-13.26, 22.97)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(-13.68, 14)];
    [bezierPath addCurveToPoint: CGPointMake(-13.32, 16.35) controlPoint1: CGPointMake(-13.68, 14) controlPoint2: CGPointMake(-13.32, 15.3)];
    [bezierPath addCurveToPoint: CGPointMake(-14.99, 18.18) controlPoint1: CGPointMake(-13.32, 17.36) controlPoint2: CGPointMake(-13.98, 18.18)];
    [bezierPath addCurveToPoint: CGPointMake(-16.77, 16.35) controlPoint1: CGPointMake(-16, 18.18) controlPoint2: CGPointMake(-16.77, 17.36)];
    [bezierPath addLineToPoint: CGPointMake(-16.75, 16.17)];
    [bezierPath addCurveToPoint: CGPointMake(-18.33, 20.52) controlPoint1: CGPointMake(-17.74, 17.35) controlPoint2: CGPointMake(-18.33, 18.87)];
    [bezierPath addCurveToPoint: CGPointMake(-14.42, 24.44) controlPoint1: CGPointMake(-18.33, 22.69) controlPoint2: CGPointMake(-16.58, 24.44)];
    [bezierPath addCurveToPoint: CGPointMake(-10.5, 20.52) controlPoint1: CGPointMake(-12.25, 24.44) controlPoint2: CGPointMake(-10.5, 22.69)];
    [bezierPath addCurveToPoint: CGPointMake(-13.68, 14) controlPoint1: CGPointMake(-10.5, 17.89) controlPoint2: CGPointMake(-11.77, 15.53)];
    [bezierPath closePath];
    [fillColor7 setFill];
    [bezierPath fill];

    CGContextRestoreGState(context);
}

+ (void)drawWatch_table_group
{
    //// Color Declarations
    UIColor* strokeColor2 = [UIColor colorWithRed: 0.502 green: 0.502 blue: 0.502 alpha: 1];
    UIColor* color2 = [UIColor colorWithRed: 0.502 green: 0.502 blue: 0.502 alpha: 1];

    //// Group 2
    {
        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(2.1, 9, 4.2, 4.1)];
        [strokeColor2 setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(9.35, 9, 4.2, 4.1)];
        [strokeColor2 setStroke];
        oval2Path.lineWidth = 1;
        [oval2Path stroke];


        //// Oval 4 Drawing
        UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(5.7, 3.05, 4.2, 4.1)];
        [strokeColor2 setStroke];
        oval4Path.lineWidth = 1;
        [oval4Path stroke];


        //// Oval 5 Drawing
        UIBezierPath* oval5Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(7.15, 8.55, 1.4, 1.4)];
        [color2 setFill];
        [oval5Path fill];
    }
}

+ (void)drawWatch_table_sensor
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* fillColor60 = [UIColor colorWithRed: 0.065 green: 0.503 blue: 0.671 alpha: 1];

    //// Group 2
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 30, -10.3);



        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(-22, 15.56)];
        [bezierPath addCurveToPoint: CGPointMake(-25.82, 19.51) controlPoint1: CGPointMake(-24.11, 15.56) controlPoint2: CGPointMake(-25.82, 17.33)];
        [bezierPath addLineToPoint: CGPointMake(-24.73, 19.51)];
        [bezierPath addCurveToPoint: CGPointMake(-22, 16.69) controlPoint1: CGPointMake(-24.73, 17.95) controlPoint2: CGPointMake(-23.51, 16.69)];
        [bezierPath addCurveToPoint: CGPointMake(-19.27, 19.51) controlPoint1: CGPointMake(-20.49, 16.69) controlPoint2: CGPointMake(-19.27, 17.95)];
        [bezierPath addLineToPoint: CGPointMake(-18.18, 19.51)];
        [bezierPath addCurveToPoint: CGPointMake(-22, 15.56) controlPoint1: CGPointMake(-18.18, 17.33) controlPoint2: CGPointMake(-19.89, 15.56)];
        [bezierPath closePath];
        [fillColor60 setFill];
        [bezierPath fill];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = [UIBezierPath bezierPath];
        [bezier2Path moveToPoint: CGPointMake(-22, 13.3)];
        [bezier2Path addCurveToPoint: CGPointMake(-28, 19.51) controlPoint1: CGPointMake(-25.31, 13.3) controlPoint2: CGPointMake(-28, 16.08)];
        [bezier2Path addLineToPoint: CGPointMake(-26.91, 19.51)];
        [bezier2Path addCurveToPoint: CGPointMake(-22, 14.43) controlPoint1: CGPointMake(-26.91, 16.7) controlPoint2: CGPointMake(-24.71, 14.43)];
        [bezier2Path addCurveToPoint: CGPointMake(-17.09, 19.51) controlPoint1: CGPointMake(-19.29, 14.43) controlPoint2: CGPointMake(-17.09, 16.7)];
        [bezier2Path addLineToPoint: CGPointMake(-16, 19.51)];
        [bezier2Path addCurveToPoint: CGPointMake(-22, 13.3) controlPoint1: CGPointMake(-16, 16.08) controlPoint2: CGPointMake(-18.69, 13.3)];
        [bezier2Path closePath];
        [fillColor60 setFill];
        [bezier2Path fill];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = [UIBezierPath bezierPath];
        [bezier3Path moveToPoint: CGPointMake(-20.64, 19.51)];
        [bezier3Path addCurveToPoint: CGPointMake(-22, 18.1) controlPoint1: CGPointMake(-20.64, 18.73) controlPoint2: CGPointMake(-21.25, 18.1)];
        [bezier3Path addCurveToPoint: CGPointMake(-23.36, 19.51) controlPoint1: CGPointMake(-22.75, 18.1) controlPoint2: CGPointMake(-23.36, 18.73)];
        [bezier3Path addCurveToPoint: CGPointMake(-23.1, 20.34) controlPoint1: CGPointMake(-23.36, 19.82) controlPoint2: CGPointMake(-23.27, 20.11)];
        [bezier3Path addLineToPoint: CGPointMake(-20.9, 20.34)];
        [bezier3Path addCurveToPoint: CGPointMake(-20.64, 19.51) controlPoint1: CGPointMake(-20.73, 20.11) controlPoint2: CGPointMake(-20.64, 19.82)];
        [bezier3Path closePath];
        [fillColor60 setFill];
        [bezier3Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = [UIBezierPath bezierPath];
        [bezier4Path moveToPoint: CGPointMake(-22.55, 22.68)];
        [bezier4Path addLineToPoint: CGPointMake(-22, 23.7)];
        [bezier4Path addLineToPoint: CGPointMake(-21.45, 22.68)];
        [bezier4Path addLineToPoint: CGPointMake(-21.45, 21.31)];
        [bezier4Path addLineToPoint: CGPointMake(-22.55, 21.31)];
        [bezier4Path addLineToPoint: CGPointMake(-22.55, 22.68)];
        [bezier4Path closePath];
        [fillColor60 setFill];
        [bezier4Path fill];


        //// Bezier 5 Drawing
        UIBezierPath* bezier5Path = [UIBezierPath bezierPath];
        [bezier5Path moveToPoint: CGPointMake(-16, 20.34)];
        [bezier5Path addLineToPoint: CGPointMake(-19.92, 20.34)];
        [bezier5Path addCurveToPoint: CGPointMake(-20.36, 20.81) controlPoint1: CGPointMake(-20.03, 20.54) controlPoint2: CGPointMake(-20.18, 20.71)];
        [bezier5Path addLineToPoint: CGPointMake(-20.36, 21.31)];
        [bezier5Path addLineToPoint: CGPointMake(-16, 21.31)];
        [bezier5Path addLineToPoint: CGPointMake(-16, 20.34)];
        [bezier5Path closePath];
        [fillColor60 setFill];
        [bezier5Path fill];


        //// Bezier 6 Drawing
        UIBezierPath* bezier6Path = [UIBezierPath bezierPath];
        [bezier6Path moveToPoint: CGPointMake(-24.08, 20.34)];
        [bezier6Path addLineToPoint: CGPointMake(-28, 20.34)];
        [bezier6Path addLineToPoint: CGPointMake(-28, 21.31)];
        [bezier6Path addLineToPoint: CGPointMake(-23.64, 21.31)];
        [bezier6Path addLineToPoint: CGPointMake(-23.64, 20.81)];
        [bezier6Path addCurveToPoint: CGPointMake(-24.08, 20.34) controlPoint1: CGPointMake(-23.82, 20.71) controlPoint2: CGPointMake(-23.97, 20.54)];
        [bezier6Path closePath];
        [fillColor60 setFill];
        [bezier6Path fill];


        //// Bezier 7 Drawing
        UIBezierPath* bezier7Path = [UIBezierPath bezierPath];
        [bezier7Path moveToPoint: CGPointMake(-20.9, 20.34)];
        [bezier7Path addLineToPoint: CGPointMake(-23.1, 20.34)];
        [bezier7Path addCurveToPoint: CGPointMake(-22.55, 20.81) controlPoint1: CGPointMake(-22.96, 20.54) controlPoint2: CGPointMake(-22.77, 20.71)];
        [bezier7Path addLineToPoint: CGPointMake(-22.55, 21.31)];
        [bezier7Path addLineToPoint: CGPointMake(-21.45, 21.31)];
        [bezier7Path addLineToPoint: CGPointMake(-21.45, 20.81)];
        [bezier7Path addCurveToPoint: CGPointMake(-20.9, 20.34) controlPoint1: CGPointMake(-21.23, 20.71) controlPoint2: CGPointMake(-21.04, 20.54)];
        [bezier7Path closePath];
        [fillColor60 setFill];
        [bezier7Path fill];



        CGContextRestoreGState(context);
    }
}

+ (void)drawWatch_connection_lost
{
    //// Color Declarations
    UIColor* color3 = [UIColor colorWithRed: 0.239 green: 0.702 blue: 0.89 alpha: 1];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(4, 4, 60, 60)];
    [color3 setStroke];
    ovalPath.lineWidth = 2;
    [ovalPath stroke];


    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(23, 22, 6, 6)];
    [color3 setFill];
    [oval2Path fill];


    //// Oval 3 Drawing
    UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(39, 22, 6, 6)];
    [color3 setFill];
    [oval3Path fill];


    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(23, 43, 22, 3)];
    [color3 setFill];
    [rectanglePath fill];
}

#pragma mark Generated Images

+ (UIImage*)imageOfWatch_light_on
{
    if (_imageOfWatch_light_on)
        return _imageOfWatch_light_on;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(68, 68), NO, 0.0f);
    [StyleKitName drawWatch_light_on];

    _imageOfWatch_light_on = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfWatch_light_on;
}

+ (UIImage*)imageOfWatch_lock_close
{
    if (_imageOfWatch_lock_close)
        return _imageOfWatch_lock_close;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(68, 68), NO, 0.0f);
    [StyleKitName drawWatch_lock_close];

    _imageOfWatch_lock_close = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfWatch_lock_close;
}

+ (UIImage*)imageOfWatch_light_off
{
    if (_imageOfWatch_light_off)
        return _imageOfWatch_light_off;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(68, 68), NO, 0.0f);
    [StyleKitName drawWatch_light_off];

    _imageOfWatch_light_off = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfWatch_light_off;
}

+ (UIImage*)imageOfWatch_temp_minus
{
    if (_imageOfWatch_temp_minus)
        return _imageOfWatch_temp_minus;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(68, 68), NO, 0.0f);
    [StyleKitName drawWatch_temp_minus];

    _imageOfWatch_temp_minus = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfWatch_temp_minus;
}

+ (UIImage*)imageOfWatch_temp_plus
{
    if (_imageOfWatch_temp_plus)
        return _imageOfWatch_temp_plus;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(68, 68), NO, 0.0f);
    [StyleKitName drawWatch_temp_plus];

    _imageOfWatch_temp_plus = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfWatch_temp_plus;
}

+ (UIImage*)imageOfWatch_lock_close_disabled
{
    if (_imageOfWatch_lock_close_disabled)
        return _imageOfWatch_lock_close_disabled;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(68, 68), NO, 0.0f);
    [StyleKitName drawWatch_lock_close_disabled];

    _imageOfWatch_lock_close_disabled = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfWatch_lock_close_disabled;
}

+ (UIImage*)imageOfWatch_lock_open_disabled
{
    if (_imageOfWatch_lock_open_disabled)
        return _imageOfWatch_lock_open_disabled;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(68, 68), NO, 0.0f);
    [StyleKitName drawWatch_lock_open_disabled];

    _imageOfWatch_lock_open_disabled = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfWatch_lock_open_disabled;
}

+ (UIImage*)imageOfWatch_lock_open
{
    if (_imageOfWatch_lock_open)
        return _imageOfWatch_lock_open;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(68, 68), NO, 0.0f);
    [StyleKitName drawWatch_lock_open];

    _imageOfWatch_lock_open = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfWatch_lock_open;
}

+ (UIImage*)imageOfWatch_table_light
{
    if (_imageOfWatch_table_light)
        return _imageOfWatch_table_light;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(16, 16), NO, 0.0f);
    [StyleKitName drawWatch_table_light];

    _imageOfWatch_table_light = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfWatch_table_light;
}

+ (UIImage*)imageOfWatch_table_lock
{
    if (_imageOfWatch_table_lock)
        return _imageOfWatch_table_lock;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(16, 16), NO, 0.0f);
    [StyleKitName drawWatch_table_lock];

    _imageOfWatch_table_lock = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfWatch_table_lock;
}

+ (UIImage*)imageOfWatch_table_heater
{
    if (_imageOfWatch_table_heater)
        return _imageOfWatch_table_heater;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(16, 16), NO, 0.0f);
    [StyleKitName drawWatch_table_heater];

    _imageOfWatch_table_heater = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfWatch_table_heater;
}

+ (UIImage*)imageOfWatch_table_group
{
    if (_imageOfWatch_table_group)
        return _imageOfWatch_table_group;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(16, 16), NO, 0.0f);
    [StyleKitName drawWatch_table_group];

    _imageOfWatch_table_group = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfWatch_table_group;
}

+ (UIImage*)imageOfWatch_table_sensor
{
    if (_imageOfWatch_table_sensor)
        return _imageOfWatch_table_sensor;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(16, 16), NO, 0.0f);
    [StyleKitName drawWatch_table_sensor];

    _imageOfWatch_table_sensor = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfWatch_table_sensor;
}

+ (UIImage*)imageOfWatch_connection_lost
{
    if (_imageOfWatch_connection_lost)
        return _imageOfWatch_connection_lost;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(68, 68), NO, 0.0f);
    [StyleKitName drawWatch_connection_lost];

    _imageOfWatch_connection_lost = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfWatch_connection_lost;
}

#pragma mark Customization Infrastructure

- (void)setWatch_light_onTargets: (NSArray*)watch_light_onTargets
{
    _watch_light_onTargets = watch_light_onTargets;

    for (id target in self.watch_light_onTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKitName.imageOfWatch_light_on];
}

- (void)setWatch_lock_closeTargets: (NSArray*)watch_lock_closeTargets
{
    _watch_lock_closeTargets = watch_lock_closeTargets;

    for (id target in self.watch_lock_closeTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKitName.imageOfWatch_lock_close];
}

- (void)setWatch_light_offTargets: (NSArray*)watch_light_offTargets
{
    _watch_light_offTargets = watch_light_offTargets;

    for (id target in self.watch_light_offTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKitName.imageOfWatch_light_off];
}

- (void)setWatch_temp_minusTargets: (NSArray*)watch_temp_minusTargets
{
    _watch_temp_minusTargets = watch_temp_minusTargets;

    for (id target in self.watch_temp_minusTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKitName.imageOfWatch_temp_minus];
}

- (void)setWatch_temp_plusTargets: (NSArray*)watch_temp_plusTargets
{
    _watch_temp_plusTargets = watch_temp_plusTargets;

    for (id target in self.watch_temp_plusTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKitName.imageOfWatch_temp_plus];
}

- (void)setWatch_lock_close_disabledTargets: (NSArray*)watch_lock_close_disabledTargets
{
    _watch_lock_close_disabledTargets = watch_lock_close_disabledTargets;

    for (id target in self.watch_lock_close_disabledTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKitName.imageOfWatch_lock_close_disabled];
}

- (void)setWatch_lock_open_disabledTargets: (NSArray*)watch_lock_open_disabledTargets
{
    _watch_lock_open_disabledTargets = watch_lock_open_disabledTargets;

    for (id target in self.watch_lock_open_disabledTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKitName.imageOfWatch_lock_open_disabled];
}

- (void)setWatch_lock_openTargets: (NSArray*)watch_lock_openTargets
{
    _watch_lock_openTargets = watch_lock_openTargets;

    for (id target in self.watch_lock_openTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKitName.imageOfWatch_lock_open];
}

- (void)setWatch_table_lightTargets: (NSArray*)watch_table_lightTargets
{
    _watch_table_lightTargets = watch_table_lightTargets;

    for (id target in self.watch_table_lightTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKitName.imageOfWatch_table_light];
}

- (void)setWatch_table_lockTargets: (NSArray*)watch_table_lockTargets
{
    _watch_table_lockTargets = watch_table_lockTargets;

    for (id target in self.watch_table_lockTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKitName.imageOfWatch_table_lock];
}

- (void)setWatch_table_heaterTargets: (NSArray*)watch_table_heaterTargets
{
    _watch_table_heaterTargets = watch_table_heaterTargets;

    for (id target in self.watch_table_heaterTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKitName.imageOfWatch_table_heater];
}

- (void)setWatch_table_groupTargets: (NSArray*)watch_table_groupTargets
{
    _watch_table_groupTargets = watch_table_groupTargets;

    for (id target in self.watch_table_groupTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKitName.imageOfWatch_table_group];
}

- (void)setWatch_table_sensorTargets: (NSArray*)watch_table_sensorTargets
{
    _watch_table_sensorTargets = watch_table_sensorTargets;

    for (id target in self.watch_table_sensorTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKitName.imageOfWatch_table_sensor];
}

- (void)setWatch_connection_lostTargets: (NSArray*)watch_connection_lostTargets
{
    _watch_connection_lostTargets = watch_connection_lostTargets;

    for (id target in self.watch_connection_lostTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKitName.imageOfWatch_connection_lost];
}


@end
